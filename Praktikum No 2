import numpy as np

def f(x):
    return np.sin(x)

def trapezoidal(a, b, n):
    h = (b - a) / n
    result = 0.5 * (f(a) + f(b))
    
    for i in range(1, n):
        result += f(a + i * h)
        
    result *= h
    return result

def romberg(a, b, max_steps):
    R = np.zeros((max_steps, max_steps))
    for i in range(max_steps):
        R[i][0] = trapezoidal(a, b, 2**i)
        
    for j in range(1, max_steps):
        for i in range(j, max_steps):
            R[i][j] = (4**j * R[i][j-1] - R[i-1][j-1]) / (4**j - 1)
            
    return R[max_steps-1][max_steps-1]

a = float(input("Masukkan batas bawah (a): "))
b = float(input("Masukkan batas atas (b): "))
n = int(input("Masukkan jumlah subinterval (n): "))

trapezoidal_result = trapezoidal(a, b, n)
print(f"Hasil Trapezoidal (n={n}): {trapezoidal_result}")

romberg_result = romberg(a, b, 5)
print(f"Hasil Romberg: {romberg_result}")
